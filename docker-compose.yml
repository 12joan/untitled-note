x-healthcheck: &healthcheck
  interval: 1s
  retries: 40

services:
  web:
    build: .
    command: 'yarn dev'
    environment: &common-env
      RAILS_ENV: development
      DATABASE_URL: postgres://postgres@db
      REDIS_URL: redis://redis:6379
      TYPESENSE_URL: http://typesense:8108
      TYPESENSE_API_KEY: trust
      S3_BUCKET: untitled-note-app-development
      S3_ENDPOINT: http://minio:9000/
      S3_EXTERNAL_ENDPOINT: http://localhost:9000/
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: root
      AWS_SECRET_ACCESS_KEY: minio-password
    env_file: .env
    ports:
      - '3000:3000'
      - '3035:3035'
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      typesense:
        condition: service_healthy
    healthcheck:
      <<: *healthcheck
      test: 'timeout 1 bash -c "</dev/tcp/127.0.0.1/3000"'

  clockwork:
    build: .
    entrypoint: ''
    command: 'clockwork config/clockwork.rb'
    environment: *common-env
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

  db:
    image: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      <<: *healthcheck
      test: '/usr/bin/pg_isready -U postgres'

  minio:
    image: minio/minio
    command: 'server /data'
    environment: 
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: minio-password
    env_file: .env
    ports:
      - 9000:9000
    volumes:
      - minio:/data
    healthcheck:
      <<: *healthcheck
      test: 'timeout 1 bash -c "</dev/tcp/127.0.0.1/9000"'

  redis:
    image: redis
    healthcheck:
      <<: *healthcheck
      test: 'redis-cli --raw incr ping'

  typesense:
    image: typesense/typesense:0.25.2
    command: '--data-dir /data --api-key=trust'
    volumes:
      - typesense:/data
    healthcheck:
      <<: *healthcheck
      test: 'timeout 1 bash -c "</dev/tcp/127.0.0.1/8108"'

volumes:
  pgdata:
  typesense:
  minio:
